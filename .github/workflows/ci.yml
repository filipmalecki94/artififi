name: CI

on:
  push:
    branches: [ "master" , "develop"]
  pull_request:
    branches: [ "master" , "develop"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Cache vendor (Composer)
      - name: Cache Composer
        uses: actions/cache@v4
        with:
          path: vendor
          key: composer-${{ hashFiles('composer.lock') }}
          restore-keys: composer-

      # Build only potrzebne serwisy (php + mysql)
      - name: Build Docker images
        run: |
          echo "🏗️ Building Docker images..."
          echo "Building PHP and MySQL containers..."
          docker compose -f docker-compose.yml build php mysql
          echo "✅ Docker images built successfully"

      - name: Start containers
        run: |
          echo "🚀 Starting containers..."
          echo "Starting PHP and MySQL containers in detached mode..."
          docker compose -f docker-compose.yml up -d php mysql
          echo "⏳ Waiting for containers to be ready..."
          sleep 10
          echo "📊 Container status:"
          docker compose -f docker-compose.yml ps
          echo "✅ Containers started successfully"

      # Composer install w kontenerze php
      - name: Install dependencies
        run: |
          echo "📦 Installing PHP dependencies..."
          echo "Running composer install in PHP container..."
          docker compose -f docker-compose.yml exec -T php composer install --no-interaction --prefer-dist --verbose
          echo "📋 Checking installed packages:"
          docker compose -f docker-compose.yml exec -T php composer show --direct
          echo "✅ Dependencies installed successfully"

      # Static analysis
      - name: Run PHPStan
        run: |
          echo "🔍 Running PHPStan static analysis..."
          echo "Analyzing PHP code for type errors and bugs..."
          docker compose -f docker-compose.yml exec -T php vendor/bin/phpstan analyse --memory-limit=512M
          echo "✅ PHPStan analysis completed"

      - name: Run PHPCS
        run: |
          echo "📏 Running PHPCS code style check..."
          echo "Checking code style against WordPress standards..."
          docker compose -f docker-compose.yml exec -T php vendor/bin/phpcs --standard=WordPress --extensions=php src/ wp/ --report=summary
          echo "✅ PHPCS code style check completed"

      # PHPUnit
      - name: Run PHPUnit
        run: |
          echo "🧪 Running PHPUnit tests..."
          echo "Executing unit and integration tests..."
          docker compose -f docker-compose.yml exec -T php vendor/bin/phpunit --testdox --verbose
          echo "📊 Test coverage summary:"
          docker compose -f docker-compose.yml exec -T php vendor/bin/phpunit --coverage-text --coverage-filter=src/
          echo "✅ PHPUnit tests completed"

      - name: Stop containers
        if: always()
        run: |
          echo "🛑 Stopping and cleaning up containers..."
          echo "Stopping all containers and removing volumes..."
          docker compose -f docker-compose.yml down -v
          echo "🧹 Cleaning up Docker system..."
          docker system prune -f
          echo "✅ Cleanup completed successfully"
